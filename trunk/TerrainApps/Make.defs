#
# GNU Makefile Variable Defs:  TerrainApps
#

#----------------------------------------------------------------------------
# define the OS to dynamically figure out the configuration
#----------------------------------------------------------------------------
OS := $(shell uname)

## We don't care about architectural distinguishers in the OS
## such as IRIX64, IRIX32, etc. so we truncate IRIX?? to IRIX
ifeq ($(findstring IRIX,$(OS)),IRIX)
OS := IRIX
endif

## Make CYGWIN_XXXX CYGWIN so it's "Windows cross platform" :)
ifeq ($(findstring CYGWIN,$(OS)),CYGWIN)
OS := CYGWIN
#OS := MINGW
endif

## Make MINGW_XXXX MINGW so it's "Windows cross platform" :)
ifeq ($(findstring MINGW,$(OS)),MINGW)
OS := MINGW
endif

#==============================================================================
#
#                                DIRECTORIES
#
#==============================================================================

LOCALBASE = /usr/local
X11BASE   = /usr/X11R6
PREFIX    = $(X11BASE)

#X_INC = /usr/include
#X_LIB = /usr/lib
X_INC = $(X11BASE)/include
X_LIB = $(X11BASE)/lib

# NOTE: VTP_ROOT is set in each Makefile

APIS_DIR         = $(VTP_ROOT)/APIs
TERRAIN_SDK_DIR  = $(VTP_ROOT)/TerrainSDK
TERRAIN_APPS_DIR = $(VTP_ROOT)/TerrainApps
VTDATA_DIR       = $(TERRAIN_SDK_DIR)/vtdata
VTLIB_DIR        = $(TERRAIN_SDK_DIR)/vtlib
VTUI_DIR         = $(TERRAIN_SDK_DIR)/vtui
VTOSG_DIR        = $(VTLIB_DIR)/vtosg
XMLHELPER_DIR    = $(TERRAIN_SDK_DIR)/xmlhelper

#NETCDF_INC = $(APIS_DIR)/NetCDF/include
#NETCDF_LIB = $(APIS_DIR)/NetCDF/lib
NETCDF_INC = /sw/include
NETCDF_LIB = /sw/lib

#PNG_INC = $(APIS_DIR)/libpng-1.0.8/include
#PNG_LIB = $(APIS_DIR)/libpng-1.0.8/lib
PNG_INC = /sw/include
PNG_LIB = /sw/lib

#
# OSG_BASE = $(LOCALBASE)/osg-0.9.7.dist
OSG_BASE = $(LOCALBASE)
OSG_INC = $(OSG_BASE)/include
OSG_LIB = $(OSG_BASE)/lib

GDAL_INC = $(LOCALBASE)/include
GDAL_LIB = $(LOCALBASE)/lib

MINI_INC = $(LOCALBASE)/include
MINI_LIB = $(LOCALBASE)/lib/libMini.a

VTDATA_INST_DIR = $(VTDATA_DIR)
VTUI_INST_DIR = $(VTUI_DIR)
VTOSG_INST_DIR  = $(VTOSG_DIR)
XMLHELPER_INST_DIR = $(XMLHELPER_DIR)
#VTDATA_INST_DIR = $(PREFIX)/lib
#VTOSG_INST_DIR  = $(PREFIX)/lib

#WX_DIR		 = /usr/local/wxMac
WX_DIR		 = /usr/local

# Mac OS X users only?
FINK_LIB   	 = /sw/lib
FINK_INC	 = /sw/include
OSX_APPS   = $(VTP_ROOT)/OSX

#============================================================================
#
# OS Specific build parameters
#
#============================================================================

#----------------------------------------------------------------------------
#
# IRIX Specific definitions
#
#----------------------------------------------------------------------------

ifeq ($(OS),IRIX)

   CXX = CC
   ifeq ($(CXX),CC) 
       #--------------------------------------------------------------------
       # SGI IRIX with MIPSPro compilers  (tested with ver. 7.3.1.1m)
       #   (IRIX Folks:  Read TerrainApps/README.sgi!)
       #--------------------------------------------------------------------

	CC        = cc -n32 -mips4 -w
	CXX       = CC -n32 -mips4 -w -LANG:std -exceptions -prelink -ptnone
	AR        = CC -n32 -mips4 -ar -WR,-v -o
	COPT      = -O -g
	LD        = $(CXX)
	LD_SHARED = $(CXX) -shared
	 
	GLUT_LIB = -lglut
	GLU_LIB  = -lGLU
	LDIRFLAGS = $(LDIRS:%=-L%)                \
	              -Wl,-rpath,$(subst $(space),$(colon),$(LDIRS))
   else  
	 #--------------------------------------------------------------------
	 # SGI IRIX with GCC  (tested with ver. 2.95.3-test2)
	 #   (IRIX Folks:  Read TerrainApps/README.sgi!)
	 #--------------------------------------------------------------------
	 CC        = gcc
	 CXX       = g++
	 AR        = ar ruv
	 COPT      = -O -g
	 LD        = $(CXX)
	 LD_SHARED = $(CXX) -shared

	 GLUT_LIB = $(HOME)/software/Mesa-3.4.1/lib/libglut.a
	 GLU_LIB  = $(HOME)/software/Mesa-3.4.1/lib/libGLU.a
	 LDIRFLAGS = $(LDIRS:%=-L%)                \
	             -Wl,-rpath,$(subst $(space),$(colon),$(LDIRS))
   endif
endif

#------------------------------------------------------------------------------
# FreeBSD with GCC (tested with ver. 2.95.2)
#------------------------------------------------------------------------------

ifeq ($(OS),FreeBSD)
   CC        = gcc
   CXX       = g++
   AR        = ar ruv
   #COPT      = -O -fpic -DPIC
   LD        = $(CXX)
   LD_SHARED = $(CXX) -shared
   PTHREAD_LIBS = -pthread
    
   GLUT_LIB = -lglut
   GLU_LIB  = -lGLU
   EXTRA_LIBS = -lXi $(PTHREAD_LIBS)
   LDIRFLAGS = $(LDIRS:%=-L%)                \
                -rpath $(subst $(space),$(colon),$(LDIRS))
endif

#------------------------------------------------------------------------------
# Mac OS X (10.2.6) with GCC (OSX)
#------------------------------------------------------------------------------
ifeq ($(OS),Darwin)
   CC        = gcc
   CXX       = g++
   AR        = ar ruv
   COPT      = -g -O -Dunix=1 -D__DARWIN_OSX__ -fPIC -I$(FINK_INC)
   LD        = $(CXX)
   LD_SHARED = $(CXX) -dynamiclib
   LIB_EXT   = dynlib

   GLUT_LIB = -framework GLUT
   GLU_LIB  = -framework OpenGL -framework Carbon
   EXTRA_LIBS = -lXi
   LDIRFLAGS = $(LDIRS:%=-L%)
   LIB_EXT = dylib
   FRAMEWORKS = $(VTP_ROOT)/VTerrain_OSX/Frameworks
   FRAMEWORK =  $(FRAMEWORKS)/$(LIB_NAME).framework
   FRAMEWORK_LIB = $(FRAMEWORK)/Versions/A/$(LIB_NAME)
   FRAMEWORK_EXE = $(FRAMEWORK)/$(LIB_NAME)

   # flags 
   COMMON_OPTS = -compatibility_version 1.2 -current_version 1.2.1 -lgdal -L/sw/lib -lnetcdf -lpng -ljpeg -lz -F$(FRAMEWORKS)

   #
   # Enumerates the build flags required to use each lib/framework
   #
   OSG_OPTS = -L$(OSG_LIB) -losg -losgGA -losgUtil \
	      -losgText -losgDB -losgGA -losgUtil -lOpenThreads
   XMLHELPER_OPTS = -framework xmlhelper
   VTDATA_OPTS = -framework vtdata

   #
   # options used by individual make files to build their respective packages.
   # E.g. if you need to modify the build opts for XmlHelper, modify the 
   # XMLHELPER_LINK_OPTS variable.
   #
   XMLHELPER_LINK_OPTS = -lstdc++ -lz   

   VTDATA_LINK_OPTS =  $(COMMON_OPTS) \
		       $(XMLHELPER_OPTS)

   VTUI_LINK_OPTS = $(shell $(WX_DIR)/bin/wx-config --libs) \
		    $(COMMON_OPTS) \
		    -flat_namespace \
		    -undefined suppress \
		    $(GLU_LIB)  \
		    $(OSG_OPTS) \
		    $(XMLHELPER_OPTS) \
		    $(VTDATA_OPTS)

   VTOSG_LINK_OPTS =  $(OSG_OPTS) \
                      $(COMMON_OPTS) \
		      $(GLU_LIB) \
		      $(XMLHELPER_OPTS)\
		      $(VTDATA_OPTS) \
		      -losgText -lMini -lz

   #
   # The default rule for building an *.app package.  Requires the
   # OSX_APPS directory. And EXEC = name of the App: Enviro, VTBuilder,
   # etc.
   #
   %.app: $(OSX_APPS) 
	-mkdir -p $(OSX_APPS)/$(EXEC).app/Contents/MacOS
	-mkdir -p $(OSX_APPS)/$(EXEC).app/Contents/Resources
#	not recommended, as the frameworks are 60MB+ together
#	but if you do want a single application package,
#	change the -install_name option when you build.
#	See TerrainSDK/Make.defs
#	-cp -Rf $(FRAMEWORKS) $(OSX_APPS)/$(EXEC).app/Contents
	-cp $(EXEC).plist $(OSX_APPS)/$(EXEC).app/Contents/Info.plist
	-echo -n "APPL????" > $(OSX_APPS)/$(EXEC).app/Contents/PkgInfo
	-cp $(EXEC).rsrc $(OSX_APPS)/$(EXEC).app/Contents/Resources/$(EXEC).rsrc
	-cp icons/$(EXEC).icns $(OSX_APPS)/$(EXEC).app/Contents/Resources/




endif
# end of $(OS) cases

# Turns on debugging: to enable run "make -DDEBUG=1"
ifeq ($(DEBUG),1)
COPT += -DDEBUG=1
endif

#------------------------------------------------------------------------------

colon:= :
empty:=  
space:= $(empty) $(empty)
